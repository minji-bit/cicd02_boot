# 이 워크플로우의 이름
name: EC2에 배포하기

# main 브랜치에 push가 발생할 때 워크플로우 실행
on:
  push:
    branches:
      - main

jobs:
  my-deploy:
    # GitHub에서 제공하는 Ubuntu 최신 환경에서 실행
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub 레포지토리 코드를 체크아웃 (가져오기)
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      # 2. Java 17 설치 (Temurin JDK 사용)
      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 3. application.properties 파일 생성 (GitHub Secrets에 저장된 내용을 복사)
      - name: application.properties 파일 만들기
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties

      # 4. gradlew 파일에 실행 권한 부여 (리눅스에서 실행 가능하도록 설정)
      - name: gradlew 실행 권한 부여
        run: chmod +x ./gradlew

      # 5. 프로젝트 빌드 실행 (clean 후 build)
      - name: 테스트 및 빌드하기
        run: ./gradlew clean build

      # 6. 빌드된 JAR 파일 이름 변경 (*SNAPSHOT.jar → project.jar)
      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      # 7. 빌드된 JAR 파일을 SCP를 통해 EC2로 전송
      - name: SCP로 EC2에 빌드된 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }} # EC2 퍼블릭 IP 또는 도메인
          username: ${{ secrets.EC2_USERNAME }} # 예: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }} # EC2에 접속 가능한 개인 키
          source: project.jar # 복사할 파일
          target: /home/ubuntu/cicd-server/tobe # 복사될 EC2 경로

      # 8. EC2에 SSH 접속하여 기존 서버 종료 → 새 프로젝트 실행
      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }} # EC2 주소
          username: ${{ secrets.EC2_USERNAME }} # EC2 사용자 이름
          key: ${{ secrets.EC2_PRIVATE_KEY }} # SSH 개인 키
          script_stop: true # 아래 명령 중 하나라도 실패하면 전체 실패 처리
          script: |
            # 기존 실행 디렉토리 삭제 후 재생성
            rm -rf /home/ubuntu/cicd-server/current
            mkdir /home/ubuntu/cicd-server/current

            # tobe 디렉토리에서 JAR 파일을 current로 이동
            mv /home/ubuntu/cicd-server/tobe/project.jar /home/ubuntu/cicd-server/current/project.jar
            cd /home/ubuntu/cicd-server/current

            # 기존 8080 포트 프로세스를 강제로 종료 (이미 실행 중인 서버 종료)
            sudo fuser -k -n tcp 8080 || true

            # JAR 파일 백그라운드 실행 (로그는 output.log에 기록)
            nohup java -jar project.jar > ./output.log 2>&1 & 

            # 임시 저장 디렉토리(tobe)는 삭제
            rm -rf /home/ubuntu/cicd-server/tobe
